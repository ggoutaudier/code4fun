
---
Organizations:
    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/code4fun.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"
    - &Geneva
        Name: GenevaMSP
        ID: GenevaMSP
        MSPDir: crypto-config/peerOrganizations/geneva.code4fun.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('GenevaMSP.admin', 'GenevaMSP.peer', 'GenevaMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('GenevaMSP.admin', 'GenevaMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('GenevaMSP.admin')"
        AnchorPeers:
            - Host: peer1.geneva.code4fun.com
              Port: 7051
    - &Zurich
        Name: ZurichMSP
        ID: ZurichMSP
        MSPDir: crypto-config/peerOrganizations/zurich.code4fun.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ZurichMSP.admin', 'ZurichMSP.peer', 'ZurichMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ZurichMSP.admin', 'ZurichMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ZurichMSP.admin')"
        AnchorPeers:
            - Host: peer1.zurich.code4fun.com
              Port: 7051

Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    Channel: &ChannelCapabilities
        V1_3: true
    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    Orderer: &OrdererCapabilities
        V1_1: true
    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    Application: &ApplicationCapabilities
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

Application: &ApplicationDefaults
    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:
    # Policies defines the set of policies at this level of the config tree
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

Orderer: &OrdererDefaults
    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo
    Addresses:
        - orderer.code4fun.com:7050
    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s
    # Batch Size: Controls the number of messages batched into a block
    BatchSize:
        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10
        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB
        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB
    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092
    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    TwoOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SwissConsortium:
                Organizations:
                    - *Geneva
                    - *Zurich
    TwoOrgsChannel:
        Consortium: SwissConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Geneva
                - *Zurich
            Capabilities:
                <<: *ApplicationCapabilities
